/**
 * \page tutorial_pg Tutorial
 *
 * To layout text you basically have two options:
 * - use the paragraph layouter
 * - use the XHTML layouter
 *
 * \section tut_basic_sec Using the Paragraph Layouter and the SDL output
 * The paragraph layouter is a basic layouter for
 * one or more paragraphs of text. Its input is a unicode string, some settings
 * and a set of properties for each and every character in the string to format.
 *
 * That way it is possible to change a single character to underlined, or red
 * or make is using a different font
 *
 * To use the paragraph layouter you need to use code like the following:
 * \include example1.cpp
 *
 * \section tut_xhtml_sec Using the XHTML Layouter and the OpenGL output
 * The XHTML layouter takes a subsection of XHTML as a string and parses it and
 * uses the paragraph layouter to layout the text. Here you specify the format using
 * html and css-like formatting information.
 *
 * The XHTML Layouter comes with 2 entry points. One takes a string, parses that string
 * into a DOM-tree and works with that tree.
 *
 * The other choice is to directly input a DOM-tree on your own.
 *
 * For the XHTML layouter the flow is slightly different:
 * \include example2.cpp
 *
 * \section tut_hyph_sec Using hyphenation dictionaries
 * The following example shows how to use hyphenation. There are only 2 things to do:
 * - register the dictionaries required for your language
 * - provide a language information, either as an attribute in the XHTML code, or to the
 *   member variable lang in the CodepointAttributes_c of you text
 *
 * \include example3.cpp
 */
